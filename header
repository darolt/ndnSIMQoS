src/click/model/ipv4-l3-click-protocol.cc:  p->RemoveHeader (header);
src/click/model/ipv4-l3-click-protocol.cc:      p->RemoveHeader (llc);
src/click/model/ipv4-l3-click-protocol.cc:      packetForRawSocket->RemoveHeader (ipHeader);
src/click/model/ipv4-click-routing.cc:      p->RemoveHeader (ipHeader);
src/test/ns3tcp/ns3tcp-loss-test-suite.cc:  p->RemoveHeader (ipHeader);
src/test/ns3tcp/ns3tcp-state-test-suite.cc:  p->RemoveHeader (ipHeader);
src/test/ns3tcp/ns3tcp-interop-test-suite.cc:  p->RemoveHeader (ipHeader);
src/tap-bridge/model/tap-bridge.cc:  p->RemoveHeader (header);
src/tap-bridge/model/tap-bridge.cc:      p->RemoveHeader (llc);
src/wifi/model/sta-wifi-mac.cc:      packet->RemoveHeader (beacon);
src/wifi/model/sta-wifi-mac.cc:          packet->RemoveHeader (probeResp);
src/wifi/model/sta-wifi-mac.cc:          packet->RemoveHeader (assocResp);
src/wifi/model/edca-txop-n.cc:          p->RemoveHeader (actionHdr);
src/wifi/model/wifi-net-device.cc:  packet->RemoveHeader (llc);
src/wifi/model/wifi-information-element-vector.h:   * \attention When you use RemoveHeader, WifiInformationElementVector supposes, that
src/wifi/model/msdu-aggregator.cc:      deserialized += aggregatedPacket->RemoveHeader (hdr);
src/wifi/model/regular-wifi-mac.cc:      packet->RemoveHeader (actionHdr);
src/wifi/model/regular-wifi-mac.cc:                packet->RemoveHeader (reqHdr);
src/wifi/model/regular-wifi-mac.cc:                packet->RemoveHeader (respHdr);
src/wifi/model/regular-wifi-mac.cc:                packet->RemoveHeader (delBaHdr);
src/wifi/model/ap-wifi-mac.cc:              packet->RemoveHeader (assocReq);
src/wifi/model/mac-low.cc:  packet->RemoveHeader (hdr);
src/wifi/model/mac-low.cc:      packet->RemoveHeader (blockAck);
src/wifi/model/mac-low.cc:      packet->RemoveHeader (blockAckReq);
src/mesh/test/dot11s/dot11s-test-suite.cc:    packet->RemoveHeader (b);
src/mesh/test/dot11s/dot11s-test-suite.cc:    packet->RemoveHeader (b);
src/mesh/test/dot11s/dot11s-test-suite.cc:    packet->RemoveHeader (b);
src/mesh/test/dot11s/dot11s-test-suite.cc:    packet->RemoveHeader (b);
src/mesh/test/dot11s/dot11s-test-suite.cc:    packet->RemoveHeader (b);
src/mesh/test/dot11s/dot11s-test-suite.cc:    packet->RemoveHeader (b);
src/mesh/test/flame/flame-test-suite.cc:  packet->RemoveHeader (b);
src/mesh/test/mesh-information-element-vector-test-suite.cc:  packet->RemoveHeader (resultVector);
src/mesh/model/dot11s/peer-management-protocol-mac.cc:      packet->RemoveHeader (beacon_hdr);
src/mesh/model/dot11s/peer-management-protocol-mac.cc:      packet->RemoveHeader (elements);
src/mesh/model/dot11s/peer-management-protocol-mac.cc:      packet->RemoveHeader (actionHdr);
src/mesh/model/dot11s/peer-management-protocol-mac.cc:        packet->RemoveHeader (peerFrame);
src/mesh/model/dot11s/peer-management-protocol-mac.cc:      packet->RemoveHeader (elements);
src/mesh/model/dot11s/hwmp-protocol-mac.cc:  packet->RemoveHeader (meshHdr);
src/mesh/model/dot11s/hwmp-protocol-mac.cc:  packet->RemoveHeader (actionHdr);
src/mesh/model/dot11s/hwmp-protocol-mac.cc:  packet->RemoveHeader (elements);
src/mesh/model/flame/flame-protocol.cc:      packet->RemoveHeader (flameHdr);
src/mesh/model/flame/flame-protocol.cc:  packet->RemoveHeader (flameHdr);
src/ndnSIM/helper/ndn-header-helper.cc:            packet->RemoveHeader (*header);
src/ndnSIM/helper/ndn-header-helper.cc:            packet->RemoveHeader (*header);
src/ndnSIM/disabled/ndn-interest-header-ccnb.cc:  packet->RemoveHeader (*interest);
src/ndnSIM/test/ndnSIM-serialization.cc:  packet.RemoveHeader (target);
src/ndnSIM/test/ndnSIM-serialization.cc:  packet.RemoveHeader (target);
src/ndnSIM/model/ndn-interest.cc:  packet->RemoveHeader (*interest);
src/ndnSIM/model/ndn-l3-protocol.cc:            packet->RemoveHeader (*header);
src/ndnSIM/model/ndn-l3-protocol.cc:            packet->RemoveHeader (*header);
src/ndnSIM/model/ndn-app-face.cc:            p->RemoveHeader (*header);
src/ndnSIM/model/ndn-app-face.cc:            p->RemoveHeader (*header);
src/ndnSIM/model/ndn-shaper-net-device-face.cc:        packet->RemoveHeader (*header);
src/ndnSIM/utils/tracers/ipv4-seqs-app-tracer.cc:  packet->RemoveHeader (tcp);
src/lte/test/test-asn1-encoding.cc:  packet->RemoveHeader (destination);
src/lte/test/test-asn1-encoding.cc:  packet->RemoveHeader (destination);
src/lte/test/test-asn1-encoding.cc:  packet->RemoveHeader (destination);
src/lte/test/test-asn1-encoding.cc:  packet->RemoveHeader (destination);
src/lte/test/test-asn1-encoding.cc:  packet->RemoveHeader (destination);
src/lte/test/test-asn1-encoding.cc:  packet->RemoveHeader (destination);
src/lte/test/test-asn1-encoding.cc:  packet->RemoveHeader (destination);
src/lte/test/test-asn1-encoding.cc:  packet->RemoveHeader (destination);
src/lte/test/test-asn1-encoding.cc:  packet->RemoveHeader (destination);
src/lte/test/test-asn1-encoding.cc:  packet->RemoveHeader (destination);
src/lte/test/test-asn1-encoding.cc:  packet->RemoveHeader (destination);
src/lte/test/epc-test-gtpu.cc:  p.RemoveHeader (h2);
src/lte/test/lte-test-entities.cc:          params.pdu->RemoveHeader (rlcAmHeader);
src/lte/test/lte-test-entities.cc:          params.pdu->RemoveHeader (rlcHeader);
src/lte/test/lte-test-entities.cc:          params.pdu->RemoveHeader (pdcpHeader);
src/lte/model/epc-sgw-pgw-application.cc:  packet->RemoveHeader (gtpu);
src/lte/model/lte-rrc-protocol-ideal.cc:  p->RemoveHeader (h);
src/lte/model/lte-rrc-protocol-ideal.cc:  p->RemoveHeader (h);
src/lte/model/lte-rrc-protocol-real.cc:      p->RemoveHeader (rrcConnectionReestablishmentHeader);
src/lte/model/lte-rrc-protocol-real.cc:      p->RemoveHeader (rrcConnectionReestablishmentRejectHeader);
src/lte/model/lte-rrc-protocol-real.cc:      p->RemoveHeader (rrcConnectionRejectHeader);
src/lte/model/lte-rrc-protocol-real.cc:      p->RemoveHeader (rrcConnectionSetupHeader);
src/lte/model/lte-rrc-protocol-real.cc:      params.pdcpSdu->RemoveHeader (rrcConnectionReconfigurationHeader);
src/lte/model/lte-rrc-protocol-real.cc:      params.pdcpSdu->RemoveHeader (rrcConnectionReleaseHeader);
src/lte/model/lte-rrc-protocol-real.cc:      p->RemoveHeader (rrcConnectionReestablishmentRequestHeader);
src/lte/model/lte-rrc-protocol-real.cc:      p->RemoveHeader (rrcConnectionRequestHeader);
src/lte/model/lte-rrc-protocol-real.cc:      params.pdcpSdu->RemoveHeader (measurementReportHeader);
src/lte/model/lte-rrc-protocol-real.cc:      params.pdcpSdu->RemoveHeader (rrcConnectionReconfigurationCompleteHeader);
src/lte/model/lte-rrc-protocol-real.cc:      params.pdcpSdu->RemoveHeader (rrcConnectionReestablishmentCompleteHeader);
src/lte/model/lte-rrc-protocol-real.cc:      params.pdcpSdu->RemoveHeader (rrcConnectionSetupCompleteHeader);
src/lte/model/lte-rrc-protocol-real.cc:  p->RemoveHeader (h);
src/lte/model/lte-rrc-protocol-real.cc:  p->RemoveHeader (h);
src/lte/model/lte-pdcp.cc:  p->RemoveHeader (pdcpHeader);
src/lte/model/epc-x2.cc:  packet->RemoveHeader (x2Header);
src/lte/model/epc-x2.cc:          packet->RemoveHeader (x2HoReqHeader);
src/lte/model/epc-x2.cc:          packet->RemoveHeader (x2HoReqAckHeader);
src/lte/model/epc-x2.cc:          packet->RemoveHeader (x2HoPrepFailHeader);
src/lte/model/epc-x2.cc:          packet->RemoveHeader (x2LoadInfoHeader);
src/lte/model/epc-x2.cc:            packet->RemoveHeader (x2SnStatusXferHeader);
src/lte/model/epc-x2.cc:          packet->RemoveHeader (x2UeCtxReleaseHeader);
src/lte/model/epc-x2.cc:          packet->RemoveHeader (x2ResStatUpdHeader);
src/lte/model/epc-x2.cc:  packet->RemoveHeader (gtpu);
src/lte/model/lte-rlc-am.cc:  packet->RemoveHeader (rlcAmHeader);
src/lte/model/lte-rlc-um.cc:  packet->RemoveHeader (rlcHeader);
src/lte/model/epc-enb-application.cc:  packet->RemoveHeader (gtpu);
src/fd-net-device/model/fd-net-device.cc:  packet->RemoveHeader (header);
src/fd-net-device/model/fd-net-device.cc:      packet->RemoveHeader (llc);
src/olsr/test/olsr-header-test-suite.cc:    packet.RemoveHeader (hdr);
src/olsr/test/olsr-header-test-suite.cc:      packet.RemoveHeader (msg1);
src/olsr/test/olsr-header-test-suite.cc:      packet.RemoveHeader (msg2);
src/olsr/test/olsr-header-test-suite.cc:  packet.RemoveHeader (msgOut);
src/olsr/test/olsr-header-test-suite.cc:  packet.RemoveHeader (msgOut);
src/olsr/test/olsr-header-test-suite.cc:  packet.RemoveHeader (msgOut);
src/olsr/model/olsr-routing-protocol.cc:  packet->RemoveHeader (olsrPacketHeader);
src/olsr/model/olsr-routing-protocol.cc:      if (packet->RemoveHeader (messageHeader) == 0)
src/emu/model/emu-net-device.cc:  packet->RemoveHeader (header);
src/emu/model/emu-net-device.cc:          packet->RemoveHeader (llc);
src/network/test/packet-metadata-test.cc:    p->RemoveHeader (header);                                      \
src/network/test/packet-test-suite.cc:    tmp->RemoveHeader (h);
src/network/model/packet.h:  uint32_t RemoveHeader (Header &header);
src/network/model/packet.h: *   - ns3::Packet::RemoveHeader
src/network/model/header.h:   * This method is used by Packet::RemoveHeader to
src/network/model/packet-metadata.cc:PacketMetadata::RemoveHeader (const Header &header, uint32_t size)
src/network/model/packet.cc:Packet::RemoveHeader (Header &header)
src/network/model/packet.cc:  m_metadata.RemoveHeader (header, deserialized);
src/network/model/packet-metadata.h:  void RemoveHeader (Header const &header, uint32_t size);
src/network/utils/radiotap-header.h:   * This method is used by Packet::RemoveHeader to re-create a header from the 
src/network/examples/main-packet-header.cc:  p->RemoveHeader (destinationHeader);
src/aodv/test/aodv-test-suite.cc:    uint32_t bytes = p->RemoveHeader (h2);
src/aodv/test/aodv-test-suite.cc:    uint32_t bytes = p->RemoveHeader (h2);
src/aodv/test/aodv-test-suite.cc:    uint32_t bytes = p->RemoveHeader (h2);
src/aodv/test/aodv-test-suite.cc:    uint32_t bytes = p->RemoveHeader (h2);
src/aodv/test/aodv-test-suite.cc:    uint32_t bytes = p->RemoveHeader (h2);
src/aodv/model/aodv-routing-protocol.cc:  packet->RemoveHeader (tHeader);
src/aodv/model/aodv-routing-protocol.cc:  p->RemoveHeader (rreqHeader);
src/aodv/model/aodv-routing-protocol.cc:  p->RemoveHeader (rrepHeader);
src/aodv/model/aodv-routing-protocol.cc:  p->RemoveHeader (rerrHeader);
src/spectrum/model/aloha-noack-net-device.cc:  packet->RemoveHeader (header);
src/spectrum/model/aloha-noack-net-device.cc:  packet->RemoveHeader (llc);
src/point-to-point/model/point-to-point-net-device.cc:  p->RemoveHeader (ppp);
src/wimax/test/wimax-tlv-test.cc:  packet->RemoveHeader (tlvReceived);
src/wimax/test/wimax-tlv-test.cc:  packet->RemoveHeader (tlvReceived);
src/wimax/test/mac-messages-test.cc:  packet->RemoveHeader (dsaReqRecv);
src/wimax/test/wimax-fragmentation-test.cc:      fragment->RemoveHeader (gnrcMacHdr);
src/wimax/test/wimax-fragmentation-test.cc:      fragment->RemoveHeader (fragSubhdr);
src/wimax/model/ipcs-classifier.cc:  C_Packet->RemoveHeader (llc);
src/wimax/model/ipcs-classifier.cc:  C_Packet->RemoveHeader (ipv4Header);
src/wimax/model/ipcs-classifier.cc:      C_Packet->RemoveHeader (udpHeader);
src/wimax/model/ipcs-classifier.cc:      C_Packet->RemoveHeader (tcpHeader);
src/wimax/model/bs-net-device.cc:  packet->RemoveHeader (gnrcMacHdr);
src/wimax/model/bs-net-device.cc:              packet->RemoveHeader (grantMgmntSubhdr);
src/wimax/model/bs-net-device.cc:          packet->RemoveHeader (msgType);
src/wimax/model/bs-net-device.cc:                packet->RemoveHeader (rngReq);
src/wimax/model/bs-net-device.cc:          packet->RemoveHeader (msgType);
src/wimax/model/bs-net-device.cc:                packet->RemoveHeader (rngReq);
src/wimax/model/bs-net-device.cc:          packet->RemoveHeader (msgType);
src/wimax/model/bs-net-device.cc:                packet->RemoveHeader (dsaReq);
src/wimax/model/bs-net-device.cc:                packet->RemoveHeader (dsaAck);
src/wimax/model/bs-net-device.cc:              C_Packet->RemoveHeader (llc);
src/wimax/model/bs-net-device.cc:              packet->RemoveHeader (fragSubhdr);
src/wimax/model/bs-net-device.cc:      packet->RemoveHeader (bwRequestHdr);
src/wimax/model/ss-net-device.cc:  packet->RemoveHeader (gnrcMacHdr);
src/wimax/model/ss-net-device.cc:          packet->RemoveHeader (msgType);
src/wimax/model/ss-net-device.cc:                packet->RemoveHeader (dlmap);
src/wimax/model/ss-net-device.cc:                packet->RemoveHeader (ulmap);
src/wimax/model/ss-net-device.cc:                packet->RemoveHeader (dcd);
src/wimax/model/ss-net-device.cc:                packet->RemoveHeader (ucd);
src/wimax/model/ss-net-device.cc:          packet->RemoveHeader (msgType);
src/wimax/model/ss-net-device.cc:              packet->RemoveHeader (rngrsp);
src/wimax/model/ss-net-device.cc:          packet->RemoveHeader (msgType);
src/wimax/model/ss-net-device.cc:              packet->RemoveHeader (rngrsp);
src/wimax/model/ss-net-device.cc:          packet->RemoveHeader (msgType);
src/wimax/model/ss-net-device.cc:                packet->RemoveHeader (dsaRsp);
src/wimax/model/ss-net-device.cc:              packet->RemoveHeader (fragSubhdr);
src/wimax/model/wimax-net-device.cc:  packet->RemoveHeader (llc);
src/applications/model/ping6.cc:          packet->RemoveHeader (hdr);
src/applications/model/ping6.cc:              packet->RemoveHeader (reply);
src/applications/model/v4ping.cc:      p->RemoveHeader (ipv4);
src/applications/model/v4ping.cc:      p->RemoveHeader (icmp);
src/applications/model/v4ping.cc:          p->RemoveHeader (echo);
src/applications/model/radvd.cc:          packet->RemoveHeader (hdr);
src/applications/model/radvd.cc:              packet->RemoveHeader (rsHdr);
src/applications/model/udp-server.cc:          packet->RemoveHeader (seqTs);
src/internet/model/arp-l3-protocol.cc:  uint32_t size = packet->RemoveHeader (arp);
src/internet/model/ipv6-option.cc:  p->RemoveHeader (pad1Header);
src/internet/model/ipv6-option.cc:  p->RemoveHeader (padnHeader);
src/internet/model/ipv6-option.cc:  p->RemoveHeader (jumbogramHeader);
src/internet/model/ipv6-option.cc:  p->RemoveHeader (routerAlertHeader);
src/internet/model/ipv6-extension.cc:  p->RemoveHeader (hopbyhopHeader);
src/internet/model/ipv6-extension.cc:  p->RemoveHeader (destinationHeader);
src/internet/model/ipv6-extension.cc:  p->RemoveHeader (fragmentHeader);
src/internet/model/ipv6-extension.cc:  p->RemoveHeader (ipv6Header);
src/internet/model/ipv6-extension.cc:          p->RemoveHeader (*hopbyhopHeader);
src/internet/model/ipv6-extension.cc:          p->RemoveHeader (*routingHeader);
src/internet/model/ipv6-extension.cc:          p->RemoveHeader (*destinationHeader);
src/internet/model/ipv6-extension.cc:  p->RemoveHeader (routingHeader);
src/internet/model/ipv6-raw-socket-impl.cc:                  p->RemoveHeader (hdr);
src/internet/model/icmpv6-l4-protocol.cc:  packet->RemoveHeader (request);
src/internet/model/icmpv6-l4-protocol.cc:  p->RemoveHeader (raHeader);
src/internet/model/icmpv6-l4-protocol.cc:          p->RemoveHeader (prefixHdr);
src/internet/model/icmpv6-l4-protocol.cc:              p->RemoveHeader (mtuHdr);
src/internet/model/icmpv6-l4-protocol.cc:              p->RemoveHeader (llaHdr);
src/internet/model/icmpv6-l4-protocol.cc:  packet->RemoveHeader (rsHeader);
src/internet/model/icmpv6-l4-protocol.cc:      packet->RemoveHeader (lla);
src/internet/model/icmpv6-l4-protocol.cc:  packet->RemoveHeader (nsHeader);
src/internet/model/icmpv6-l4-protocol.cc:      packet->RemoveHeader (lla);
src/internet/model/icmpv6-l4-protocol.cc:  packet->RemoveHeader (naHeader);
src/internet/model/icmpv6-l4-protocol.cc:  packet->RemoveHeader (lla);
src/internet/model/icmpv6-l4-protocol.cc:  p->RemoveHeader (redirectionHeader);
src/internet/model/icmpv6-l4-protocol.cc:      p->RemoveHeader (llOptionHeader);
src/internet/model/icmpv6-l4-protocol.cc:  p->RemoveHeader (redirectedOptionHeader);
src/internet/model/icmpv6-l4-protocol.cc:  pkt->RemoveHeader (unreach);
src/internet/model/icmpv6-l4-protocol.cc:      origPkt->RemoveHeader (ipHeader);
src/internet/model/icmpv6-l4-protocol.cc:  pkt->RemoveHeader (timeexceeded);
src/internet/model/icmpv6-l4-protocol.cc:  origPkt->RemoveHeader (ipHeader);
src/internet/model/icmpv6-l4-protocol.cc:  pkt->RemoveHeader (tooBig);
src/internet/model/icmpv6-l4-protocol.cc:  origPkt->RemoveHeader (ipHeader);
src/internet/model/icmpv6-l4-protocol.cc:  pkt->RemoveHeader (paramErr);
src/internet/model/icmpv6-l4-protocol.cc:  origPkt->RemoveHeader (ipHeader);
src/internet/model/ipv4-raw-socket-impl.cc:          p->RemoveHeader (header);
src/internet/model/udp-l4-protocol.cc:  packet->RemoveHeader(udpHeader);
src/internet/model/udp-l4-protocol.cc:  packet->RemoveHeader (udpHeader);
src/internet/model/tcp-socket-base.cc:  packet->RemoveHeader (tcpHeader);
src/internet/model/tcp-socket-base.cc:  packet->RemoveHeader (tcpHeader);
src/internet/model/ipv6-l3-protocol.cc:              packet->RemoveHeader (hdr);
src/internet/model/ipv6-l3-protocol.cc:  packet->RemoveHeader (hdr);
src/internet/model/icmpv4-l4-protocol.cc:  p->RemoveHeader (echo);
src/internet/model/icmpv4-l4-protocol.cc:  p->RemoveHeader (icmp);
src/internet/model/ipv4-l3-protocol.cc:              packet->RemoveHeader (ipHeader);
src/internet/model/ipv4-l3-protocol.cc:  packet->RemoveHeader (ipHeader);
src/internet/model/ipv4-l3-protocol.cc:          packet->RemoveHeader (ipHeader);
src/internet/model/ipv4-l3-protocol.cc:          packet->RemoveHeader (ipHeader);
src/internet/model/ipv4-l3-protocol.cc:  p->RemoveHeader (ipv4Header);
src/dsr/test/dsr-test-suite.cc:  uint32_t bytes = p->RemoveHeader (h2);
src/dsr/test/dsr-test-suite.cc:  uint32_t bytes = p->RemoveHeader (h2);
src/dsr/test/dsr-test-suite.cc:  uint32_t bytes = p->RemoveHeader (h2);
src/dsr/test/dsr-test-suite.cc:  uint32_t bytes = p->RemoveHeader (h2);
src/dsr/test/dsr-test-suite.cc:  uint32_t bytes = p->RemoveHeader (h2);
src/dsr/test/dsr-test-suite.cc:  uint32_t bytes = p->RemoveHeader (h2);
src/dsr/model/dsr-options.cc:  p->RemoveHeader (pad1Header);
src/dsr/model/dsr-options.cc:  p->RemoveHeader (padnHeader);
src/dsr/model/dsr-options.cc:  p->RemoveHeader (rreq);
src/dsr/model/dsr-options.cc:              p->RemoveHeader (rerr);
src/dsr/model/dsr-options.cc:  p->RemoveHeader (rrep);
src/dsr/model/dsr-options.cc:  p->RemoveHeader (sourceRoute);
src/dsr/model/dsr-options.cc:          p->RemoveHeader (ackReq);
src/dsr/model/dsr-options.cc:      p->RemoveHeader (rerrUnreach);
src/dsr/model/dsr-options.cc:      p->RemoveHeader (rerrUnsupport);
src/dsr/model/dsr-options.cc:  p->RemoveHeader (sourceRoute);
src/dsr/model/dsr-options.cc:  p->RemoveHeader (ackReq);
src/dsr/model/dsr-options.cc:  p->RemoveHeader (ack);
src/dsr/model/dsr-routing.cc:  newP->RemoveHeader(hdr);
src/dsr/model/dsr-routing.cc:  newP->RemoveHeader(llc);
src/dsr/model/dsr-routing.cc:  newP->RemoveHeader(ip);
src/dsr/model/dsr-routing.cc:  newP->RemoveHeader(dsrRouting);
src/dsr/model/dsr-routing.cc:          p->RemoveHeader (dsrRoutingHeader);
src/dsr/model/dsr-routing.cc:          newPacket->RemoveHeader (sourceRoute);
src/dsr/model/dsr-routing.cc:          newPacket->RemoveHeader (ackReq);
src/dsr/model/dsr-routing.cc:          dsrPacket->RemoveHeader (dsrRoutingHeader);
src/dsr/model/dsr-routing.cc:      p->RemoveHeader (ipv4Header);
src/dsr/model/dsr-routing.cc:          dsrPacket->RemoveHeader (dsrRoutingHeader);
src/dsr/model/dsr-routing.cc:  dsrP->RemoveHeader (dsrRoutingHeader);          // Remove the DSR header in whole
src/dsr/model/dsr-routing.cc:  tmpP->RemoveHeader (sourceRoute);               // this is a clean packet without any dsr involved headers
src/dsr/model/dsr-routing.cc:          dsrPacket->RemoveHeader (dsrRoutingHeader);
src/dsr/model/dsr-routing.cc:  p->RemoveHeader (dsrRoutingHeader);
src/dsr/model/dsr-routing.cc:  newPacket->RemoveHeader (sourceRoute);
src/dsr/model/dsr-routing.cc:      dsrP->RemoveHeader (dsrRoutingHeader);          // Remove the dsr header in whole
src/dsr/model/dsr-routing.cc:      p->RemoveHeader (sourceRoute);
src/dsr/model/dsr-routing.cc:      dsrP->RemoveHeader (dsrRoutingHeader);          // Remove the dsr header in whole
src/dsr/model/dsr-routing.cc:      p->RemoveHeader (sourceRoute);
src/dsr/model/dsr-routing.cc:  dsrP->RemoveHeader (dsrRoutingHeader);          // Remove the dsr header in whole
src/dsr/model/dsr-routing.cc:  packet->RemoveHeader (dsrRoutingHeader);          // Remove the DSR header in whole
src/uan/model/uan-mac-cw.cc:  packet->RemoveHeader (header);
src/uan/model/uan-mac-rc-gw.cc:  pkt->RemoveHeader (ch);
src/uan/model/uan-mac-rc-gw.cc:        pkt->RemoveHeader (dh);
src/uan/model/uan-mac-rc-gw.cc:        pkt->RemoveHeader (rh);
src/uan/model/uan-mac-aloha.cc:  pkt->RemoveHeader (header);
src/uan/model/uan-mac-rc.cc:  pkt->RemoveHeader (ch);
src/uan/model/uan-mac-rc.cc:          pkt->RemoveHeader (dh);
src/uan/model/uan-mac-rc.cc:        pkt->RemoveHeader (ctsg);
src/uan/model/uan-mac-rc.cc:            pkt->RemoveHeader (ctsh);
src/uan/model/uan-mac-rc.cc:  ack->RemoveHeader (ah);
src/dsdv/test/dsdv-testcase.cc:    packet->RemoveHeader (hdr2);
src/dsdv/test/dsdv-testcase.cc:    packet->RemoveHeader (hdr1);
src/dsdv/model/dsdv-routing-protocol.cc:      packet->RemoveHeader (dsdvHeader);
src/csma/model/csma-net-device.cc:  p->RemoveHeader (header);
src/csma/model/csma-net-device.cc:        p->RemoveHeader (llc);
src/csma/model/csma-net-device.cc:  packet->RemoveHeader (header);
src/csma/model/csma-net-device.cc:      packet->RemoveHeader (llc);
utils/bench-packets.cc:    o->RemoveHeader (ipv4);
utils/bench-packets.cc:    o->RemoveHeader (udp);
utils/bench-packets.cc:    o->RemoveHeader (ipv4);
utils/bench-packets.cc:    o->RemoveHeader (udp);
utils/bench-packets.cc:  p->RemoveHeader (udp);
utils/bench-packets.cc:  p->RemoveHeader (ipv4);
